sudo: required
language: cpp
dist: trusty
group: edge

compiler:
    - gcc
os:
    - linux


notifications:
  email: false

services:
  docker

# Blacklist
branches:
  only:
     - master

before_install:
  - sudo apt-get update
  - sudo apt-get upgrade
  
install:
  # Install and source QT
  #- sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -qq
  - sudo apt-get install gcc-snapshot -y
  - sudo apt-get install gcc-6 g++-6 -y
  
  - sudo apt-get install -qq qt5-qmake qtbase5-dev qtdeclarative5-dev libqt5webkit5-dev libsqlite3-dev
  
  # OpenCV dependencies - Details available at: http://docs.opencv.org/trunk/doc/tutorials/introduction/linux_install/linux_install.html
  - sudo apt-get install -y build-essential
  - sudo apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
  - sudo apt-get install -y python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev

  # Download v3.0.0 .zip file and extract.
  - curl -sL https://github.com/Itseez/opencv/archive/3.0.0-beta.zip > opencv.zip
  - unzip opencv.zip
  - cd opencv-3.0.0-beta
  
  # Create a new 'build' folder.
  - mkdir build
  - cd build
  
  # Set build instructions for Ubuntu distro.
  - cmake -D CMAKE_BUILD_TYPE=DEBUG -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=OFF -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=OFF -D WITH_QT=ON -D WITH_OPENGL=OFF ..
  - make -j8
  - sudo make install
  
  # Add configuration to OpenCV to tell it where the library files are located on the file system (/usr/local/lib)
  - sudo sh -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
  
  - sudo ldconfig
  - echo "OpenCV installed."
# We need to return to the repo "root" folder, so we can then 'cd' into the C++ project folder.
  - cd ../../
  
script:
  - export CC=gcc-6 CXX=g++-6 CMAKE_BUILD_TYPE=Debug
  - chmod +x .script_travis.sh
  - ./.script_travis.sh



# Generate and deploy documentation #TODO
after_success:
  # Creating report
  #- cd ${TRAVIS_BUILD_DIR}
  #- lcov --directory . --capture --output-file coverage.info # capture coverage info
  #- lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  #- lcov --list coverage.info #debug info
  # Uploading report to CodeCov
  #- bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
